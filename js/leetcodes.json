[
    {
        "num": "2048",
        "link": "https://leetcode.com/problems/next-greater-numerically-balanced-number/",
        "name": "Next Greater Numerically Balanced Number",
        "date": "25/10/2025",
        "difficulty": "Medium",
        "preamble": "Hello, world!",
        "solution": "class Solution:\n    def nextBeautifulNumber(self, n: int) -> int:\n        start_n = n + 1\n        str_n = str(start_n)\n\n        while not all((str_n.count(c) == int(c) for c in str_n)):\n            start_n += 1\n            str_n = str(start_n)\n\n        return start_n\n"
    },
    {
        "num": "1",
        "link": "https://leetcode.com/problems/two-sum/",
        "name": "Two Sum",
        "date": "22/10/2025",
        "difficulty": "Easy",
        "preamble": "Hello, world!",
        "solution": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        index = {}\n\n        for i, n in enumerate(nums):\n            if n in index:\n                return [index[n], i]\n            \n            index[target - n] = i\n"
    },
    {
        "num": "22",
        "link": "https://leetcode.com/problems/generate-parentheses/",
        "name": "Generate Parentheses",
        "date": "21/10/2025",
        "difficulty": "Medium",
        "preamble": "Hello, world!",
        "solution": "cool"
    },
    {
        "num": "23",
        "link": "https://leetcode.com/problems/merge-k-sorted-lists/",
        "name": "Merge k Sorted Lists",
        "date": "20/10/2025",
        "difficulty": "Hard",
        "preamble": "Hello, world!",
        "solution": "cool"
    }
]